name: Deploy to Cloudflare Workers

# 触发条件：当代码推送到 main 分支时自动部署
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers
    
    steps:
      # 第一步：检出代码
      - name: Checkout code
        uses: actions/checkout@v4
        
      # 第二步：设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      # 第三步：安装 pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      # 第四步：安装依赖
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      # 第五步：构建项目
      - name: Build project
        run: pnpm run build
        
      # 第六步：运行数据库迁移
      - name: Run database migrations
        run: npx wrangler d1 migrations apply nanobanana
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          
      # 第七步：部署到 Cloudflare Workers
      - name: Deploy to Cloudflare Workers
        run: npx wrangler deploy --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          
      # 第八步：设置环境变量和密钥（可选，如果需要更新）
      - name: Update secrets (if needed)
        run: |
          echo "Deployment completed successfully!"
          echo "Make sure all secrets are properly configured in Cloudflare Workers"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}